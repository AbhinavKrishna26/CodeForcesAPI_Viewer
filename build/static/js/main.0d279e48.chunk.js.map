{"version":3,"sources":["Components/Searchbar.js","Components/Charts/VerdictChart.js","Components/Charts/Tags.js","Components/Charts/MainProfile.js","Components/Charts/ProblemRating.js","Components/contest.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Searchbar","state","search","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addSearch","className","onSubmit","this","style","paddingBottom","borderRadius","border","marginTop","opacity","type","placeholder","onChange","React","Component","VerdictChart","mp","i","data","length","verdict","verSliceColors","push","color","len","title","user","width","height","chartType","WRONG_ANSWER","TIME_LIMIT_EXCEEDED","MEMORY_LIMIT_EXCEEDED","OK","PARTIAL","IDLENESS_LIMIT_EXCEEDED","RUNTIME_ERROR","SKIPPED","CHALLENGED","options","legend","position","alignment","textStyle","fontSize","fontName","slices","chartArea","pieHole","tooltip","text","titleTextStyle","bold","backgroundColor","pieSliceText","rootProps","Tags","tags","j","problem","undefined","x","colors","MainProfile","rank","handle","firstName","lastName","city","organization","pic","rating","titlePhoto","src","ProblemRating","prob","str","d","role","parseInt","sort","a","b","toString","paddingTop","chart","bar","groupWidth","Contest","best","worst","maxUp","maxDown","user_data","forEach","con","ch","newRating","oldRating","problems","sub","problemId","contestId","index","attempts","solved","maxAttempt","maxAc","unsolved","p","unsolvedList","map","href","split","display","padding","fontWeight","marginLeft","Home","mainprof","error","url","Axios","get","then","res","result","catch","console","log","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0d279e48.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Searchbar extends React.Component{\n    state= {\n        search:null,\n    };\n    handleChange = (e)=>{\n        this.setState({\n            search:e.target.value\n        });\n    };\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        this.props.addSearch(this.state.search)\n\n    };\nrender() {\n        return(\n            <form className=\"row container input-field grey darken-1 z-depth-2\" onSubmit={this.handleSubmit} style={{paddingBottom:20,borderRadius:\"30px 15px\"}}>\n                <div className=\"col center s10 push-s1 white\" style={{border:\"2px solid white\",marginTop:20,borderRadius:\"10px\",opacity:.7}} >\n                    <input type=\"text\" placeholder=\"Codeforces User Handle\" onChange={this.handleChange}/>\n                </div>\n            </form>\n        )\n}\n\n}\nexport default Searchbar","import React from \"react\";\nimport Chart from \"react-google-charts\";\n\nclass VerdictChart extends React.Component{\n\n    render() {\n        const mp ={\n            \"OK\":0,\n            'WRONG_ANSWER':0,\n            'TIME_LIMIT_EXCEEDED':0,\n            'MEMORY_LIMIT_EXCEEDED':0,\n            'RUNTIME_ERROR':0,\n            'COMPILATION_ERROR':0,\n            'SKIPPED':0,\n            'CHALLENGED':0,\n            \"PARTIAL\":0,\n            \"IDLENESS_LIMIT_EXCEEDED\":0,\n\n        };\n        for(var i=0;i<this.props.data.length;i++){\n            mp[this.props.data[i].verdict]++;\n        }\n        var verSliceColors = [];\n        verSliceColors.push({ color: '#4CAF50' });\n        verSliceColors.push({ color: '#f44336' });\n        verSliceColors.push({ color: '#2196F3' });\n        verSliceColors.push({ color: '#673AB7' });\n        verSliceColors.push({ color: '#FF5722' });\n        verSliceColors.push({ color: '#607D8B' });\n        verSliceColors.push({ color: '#EEEEEE' });\n        verSliceColors.push({ color: '#E91E63' });\n        verSliceColors.push({});\n        var titleTextStyle = {\n          fontSize: 18,\n          color: 'blanchedalmond',\n          bold: false\n        };\n        const len = this.props.data.length;\n        const title = 'Verdict of  '+this.props.user;\n        return(\n            <div>\n            {len>0 &&\n                    <Chart\n                        width={'100%'}\n                        height= {'400px'}\n                        className=\"col center s12 z-depth-2\"\n                        chartType=\"PieChart\"\n\n                        data={[\n                            ['Task', 'Stats'],\n                            ['WA', mp.WRONG_ANSWER],\n                            ['Time Limit Exceeded', mp.TIME_LIMIT_EXCEEDED],\n                            ['Memory Limit Exceeded', mp.MEMORY_LIMIT_EXCEEDED],\n                            ['AC', mp.OK],\n                            ['Partial', mp.PARTIAL],\n                            ['Idleness Limit Exceeded', mp.IDLENESS_LIMIT_EXCEEDED],\n                            ['Runtime Error', mp.RUNTIME_ERROR],\n                            ['Skipped',mp.SKIPPED],\n                            ['Challenged',mp.CHALLENGED],\n\n                        ]}\n                        options={{\n                            legend: {\n                              position: 'right',\n                              alignment: 'center',\n                              textStyle: {\n                                fontSize: 12,\n                                fontName: 'Roboto',\n                                color: 'blanchedalmond'\n                              }\n                            },\n                            slices: verSliceColors,\n                            fontName: 'Roboto',\n                            chartArea:{\n                            width: '100%',\n                            height: '320', \n                            },\n                            title: title,\n                            pieHole:0.5,\n                            tooltip: {\n                              text: 'percentage'\n                            },\n                            titleTextStyle: titleTextStyle,\n                            backgroundColor: '#333946',\n                            pieSliceText: 'label',\n                        }}\n                        rootProps={{'data-testid': '2'}}\n                    />\n            }\n            </div>\n        )\n    }\n\n}\nexport default VerdictChart","import React from \"react\";\nimport Chart from \"react-google-charts\";\n\nclass Tags extends React.Component{\n\n    render() {\n        const tags ={\n\n        };\n        for(var i=0;i<this.props.data.length;i++){\n            if(this.props.data[i].verdict===\"OK\") {\n                for(var j=0; j<this.props.data[i].problem.tags.length;j++){\n                    if (tags[this.props.data[i].problem.tags[j]] === undefined)\n                    tags[this.props.data[i].problem.tags[j]]=1\n                    else tags[this.props.data[i].problem.tags[j]]++;\n                }\n            }\n        }\n\n        const data = [['Tag','Stats']];\n\n        for (var x in tags) {\n            data.push([x,tags[x]])\n        }\n        var colors = [\n            '#f44336',\n            '#E91E63',\n            '#9C27B0',\n            '#673AB7',\n            '#2196F3',\n            '#009688',\n            '#8BC34A',\n            '#CDDC39',\n            '#FFC107',\n            '#FF9800',\n            '#FF5722',\n            '#795548',\n            '#607D8B',\n            '#E65100',\n            '#827717',\n            '#004D40',\n            '#1A237E',\n            '#6200EA',\n            '#3F51B5',\n            '#F50057',\n            '#304FFE',\n            '#b71c1c'\n          ];\n        var titleTextStyle = {\n          fontSize: 18,\n          color: 'blanchedalmond',\n          bold: false\n        };\n        const len = this.props.data.length;\n        const title = 'Tags of '+this.props.user;\n        return(\n            <div>\n            {len>0 &&\n                    <Chart\n                        width={'100%'}\n                        height={'500px'}\n                        className=\"col s12 z-depth-2\"\n                        chartType=\"PieChart\"\n                        data = {data}\n                        options={{\n                            legend: {\n                              position: 'right',\n                              alignment: 'center',\n                              textStyle: {\n                                fontSize: 12,\n                                fontName: 'Roboto',\n                                color: 'blanchedalmond'\n                              }\n                            },\n                            chartArea: { width: '80%', height: '70%' },\n                            title: title,\n                            pieSliceText: 'none',\n                            pieHole:0.5,\n                            tooltip: {\n                              text: 'percentage'\n                            },\n                            fontName: 'Roboto',\n                            backgroundColor: '#333946',\n                            titleTextStyle: titleTextStyle,\n                            colors: colors\n                        }}\n                        rootProps={{'data-testid': '2'}}\n                    />\n            }\n            </div>\n        )\n    }\n\n}\nexport default Tags","import React from \"react\";\r\nclass MainProfile extends React.Component{\r\n    render(){\r\n        var rank,rating=0,handle,firstName,lastName,city,organization,pic;\r\n        for(var i=0;i<this.props.data.length;i++){\r\n            handle=this.props.data[i].handle;\r\n            firstName=this.props.data[i].firstName;\r\n            lastName=this.props.data[i].lastName;\r\n            rank=this.props.data[i].rank;\r\n            city=this.props.data[i].city;\r\n            organization=this.props.data[i].organization;\r\n            rating=this.props.data[i].rating;\r\n            pic=this.props.data[i].titlePhoto;\r\n        }\r\n        var len=this.props.data.length;\r\n        return(\r\n            <div>\r\n                {len>0 && \r\n                    <div className=\"col center s12 m6 l6 z-depth-2\" style={{borderRadius:\"10px\"}}>\r\n                        <table style={{backgroundColor: \"#333946\"}}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"center\" style={{color: \"blanchedalmond\"}}>Main profile of {handle}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr className=\"center\" style={{borderRadius:\"10px\"}}>\r\n                                    <td><img src={pic} height={100} width={100} /></td>\r\n                                </tr>\r\n                                <tr className=\"hoverable\" style={{borderRadius:\"10px\"}}>\r\n                                    <td style={{color: \"blanchedalmond\"}}>First Name</td>\r\n                                    <td className=\"right\" style={{color: \"blanchedalmond\"}}>{firstName}</td>\r\n                                </tr>\r\n                                <tr className=\"hoverable\" style={{borderRadius:\"10px\"}}>\r\n                                    <td style={{color: \"blanchedalmond\"}}>Last Name</td>\r\n                                    <td className=\"right\" style={{color: \"blanchedalmond\"}}>{lastName}</td>\r\n                                </tr>\r\n                                <tr className=\"hoverable\" style={{borderRadius:\"10px\"}}>\r\n                                    <td style={{color: \"blanchedalmond\"}}>Rank</td>\r\n                                    <td className=\"right\" style={{color: \"blanchedalmond\"}}>{rank}</td>\r\n                                </tr>\r\n                                <tr className=\"hoverable\" style={{borderRadius:\"10px\"}}>\r\n                                    <td style={{color: \"blanchedalmond\"}}>Rating</td>\r\n                                    <td className=\"right\" style={{color: \"blanchedalmond\"}}>{rating}</td>\r\n                                </tr>\r\n                                <tr className=\"hoverable\" style={{borderRadius:\"10px\"}}>\r\n                                    <td style={{color: \"blanchedalmond\"}}>City</td>\r\n                                    <td className=\"right\" style={{color: \"blanchedalmond\"}}>{city}</td>\r\n                                </tr>\r\n                                <tr className=\"hoverable\" style={{borderRadius:\"10px\"}}>\r\n                                    <td style={{color: \"blanchedalmond\"}}>Organization</td>\r\n                                    <td className=\"right\" style={{color: \"blanchedalmond\"}}>{organization}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default MainProfile\r\n","import React from \"react\";\nimport {Chart} from \"react-google-charts\";\n\nclass ProblemRating extends React.Component{\n\n    render() {\n        const prob={\n             \n        };\n         var titleTextStyle = {\n          fontSize: 18,\n          color: 'blanchedalmond',\n          bold: false\n        };\n        for(var i=0;i<this.props.data.length;i++){\n            const str= this.props.data[i].problem.rating;\n            if(this.props.data[i].verdict===\"OK\") {\n               if(str!==undefined){\n                    if(prob[str]===undefined) {\n                        prob[str]=1;\n                }\n                    else ++prob[str];\n               }\n            }\n        }\n        const d = []\n        const data = [[\"Rating\",\"Count\",{role: \"style\"}]];\n        for (var x in prob) {\n            d.push([parseInt(x),prob[x]])\n        }\n        d.sort(sortFunction);\n\n        function sortFunction(a, b) {\n            if (a[0] === b[0]) {\n                return 0;\n            } else {\n                return (a[0] < b[0]) ? -1 : 1;\n            }\n        }\n        for(var j=0;j<d.length;j++){\n            if(j&1)\n                data.push([d[j][0].toString(),d[j][1],'#b87333'])\n            else\n                data.push([d[j][0].toString(),d[j][1],'gold'])\n            \n        }\n        const len = this.props.data.length;\n        return(\n            <div>\n                {len > 0 &&\n                    <Chart\n                          width={'100%'}\n                          height={'300px'}\n                          className=\"center col s12 z-depth-2\"\n                          chartType=\"ColumnChart\"\n                          style={{paddingTop:20}}\n                          data={data}\n                          options={{\n                              chartArea:{\n                                            width: '80%',\n                                            height: '150',\n                                            },\n                                chart: {\n                                    \n                                    legend:\"none\",\n                                        },\n                                title: 'Problem ratings of '+ this.props.user,\n                                bar: { groupWidth: '95%' },\n                                legend: { position: 'none' },\n                                backgroundColor: '#333946',\n                              titleTextStyle: titleTextStyle,\n\n                          }}\n\n                    />\n                }\n            </div>\n        )\n    }\n\n}\nexport default ProblemRating","import React from \"react\";\nclass Contest extends React.Component{\n\n    render() {\n            var best = 1e10;\n            var worst = -1e10;\n            var maxUp = 0;\n            var maxDown = 0;\n            var con_url = 'https://codeforces.com/contest/';\n            this.props.user_data.forEach(function(con) {\n            if (con.rank < best) {\n              best = con.rank;\n            }\n            if (con.rank > worst) {\n              worst = con.rank;\n            }\n            var ch = con.newRating - con.oldRating;\n            if (ch > maxUp) {\n              maxUp = ch;\n            }\n            if (ch < maxDown) {\n              maxDown = ch;\n            }\n            });\n            var problems = {};\n            for (var i = this.props.data.length - 1; i >= 0; i--) {\n                var sub = this.props.data[i];\n                var problemId = sub.problem.contestId + '-' + sub.problem.index;\n                if (problems[problemId] === undefined) {\n                    problems[problemId] = {\n                        attempts: 1,\n                        solved: 0\n                    };\n                } else {\n                    if (problems[problemId].solved === 0) problems[problemId].attempts++;\n                }\n\n                if (sub.verdict === 'OK') {\n                    problems[problemId].solved++;\n                }\n            }\n                var maxAttempt = 0;\n                var maxAc = '';\n                var unsolved = [];\n                for (var p in problems) {\n                    if (problems[p].solved === 0) unsolved.push(p);\n\n                    if (problems[p].attempts > maxAttempt) {\n                        maxAttempt = problems[p].attempts;\n                    }\n                    if (problems[p].solved > maxAc) {\n                        maxAc = problems[p].solved;\n                    }\n                }\n                const unsolvedList =unsolved.map(p=>{\n                    if(p!==undefined) {\n                        return (\n                            <div className=\"col s3 m2 l2\"><a href={con_url+p.split('-')[0]+'/problem/'+p.split('-')[1]}  style={{display:\"inline-block\"}}>\n                                {p}\n                            </a>\n                            </div>\n                        )\n                    }\n                })\n        return(\n            <div >\n                {unsolved.length>0&&\n                <div className=\"row z-depth-2\" style={{padding:20}}>\n                    <span style={{ color: \"blanchedalmond\",fontWeight: 500,fontSize: \"18px\",marginLeft:\"50\"}}>Unsolved</span>\n                    <div >{unsolvedList}</div>\n                </div>\n                }\n            </div>\n        )\n    }\n\n}\nexport default Contest","import React from 'react';\nimport Searchbar from \"./Components/Searchbar\";\nimport Axios from \"axios\";\nimport VerdictChart from \"./Components/Charts/VerdictChart\";\nimport Tags from \"./Components/Charts/Tags\";\nimport MainProfile from \"./Components/Charts/MainProfile\";\nimport ProblemRating from \"./Components/Charts/ProblemRating\";\nimport Contest from \"./Components/contest\";\nclass Home extends React.Component{\n    \n    state = {\n        search:\"\",\n        data:[],\n        mainprof:[],\n        user_data:[],\n        error:false,\n    };\n    addSearch = (search)=> {\n        const url = \"https://codeforces.com/api/user.status?handle=\"+search;\n        Axios.get(url)\n            .then(res=>{\n                this.setState({\n                    data:res.data.result,\n                    search:search\n                })\n\n            })\n            .catch(error=>{\n                this.setState({\n                    error:true\n                })\n                console.log(this.state.error)\n            });\n        Axios.get(\"https://codeforces.com/api/user.rating?handle=\"+search)\n            .then(res=>{\n                this.setState({\n                    user_data:res.data.result\n                })\n            })\n        Axios.get(\" https://codeforces.com/api/user.info?handles=\"+search)\n            .then(res =>{\n                this.setState({\n                    mainprof:res.data.result\n                })\n            });\n        \n\n    };\n\n    render() {\n\n      return(\n            <div>\n                <Searchbar addSearch={this.addSearch} />\n                {this.state.error&&\n                    <div>\n                        <p className=\"center\">Couldn't find user.</p>\n                    </div>\n                }\n                <div className = \"row container\" >\n                    <MainProfile data={this.state.mainprof} user={this.state.search} />\n                </div>\n                <div className=\"row container\">\n                    <VerdictChart data={this.state.data} user={this.state.search} />\n                </div>\n                <div className=\"row container\">\n                    <ProblemRating data={this.state.data} user={this.state.search}/>\n                </div>\n                <div className=\"row container\">\n                    <div >\n                        <Tags data={this.state.data} user={this.state.search}/>\n                    </div>\n                </div>\n                <div className=\"row container\">\n                    <Contest user={this.state.search} user_data={this.state.user_data} data={this.state.data}/>\n                </div>\n            </div>\n  )\n }\n};\n\nexport default Home;","import React from 'react';\nimport \"./App.css\";\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\"\nimport Home from \"./Home\";\n//import ParticleBackground from './ParticleBackground';\n\nclass App extends React.Component{\n\n    render() {\n      return(\n            <BrowserRouter >\n                <div>\n                    {/*<ParticleBackground/>*/}\n                    <Switch>\n                        <Route exact path='/' component={Home}/>\n                    </Switch>\n                 </div>\n            </BrowserRouter>\n  )\n }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}